// increment logic
set 4                           // r3 = 4 (increment counter in r4)
get r0 r3                       // r0 = r4
set 1                           // r3 = 1
add r0 r3                       // r0 += r3
set 4                           // r3 = 4
put r3 r0                       // r4 = r0

// branch logic
set 0                           // r3 = 0
and r1 r3                       // r1 = r1 & r3
and r2 r3                       // r2 = r2 & r3
set 15                          // r3 = 15
add r1 r3                       // r1 = r1 + r3
set 1                           // r3 = 1
add r2 r3                       // r2 = r2 + r3
sne r0 r1                       // r0 = (r0 != r1)
set 0                           // r3 = 0
and r1 r3                       // r1 = r1 & r3
set 44                          // r3 = 44
add r1 r3                       // r1 = r1 + r3
set 2                           // r3 = 2
sleft r1 r3                     // r1 = r1 << r3 (r1 = 176)
b_up r0 r2 r1                   // if (r0 == r2) PC = PC - r1 (loop back to PC 4 if count != 15)